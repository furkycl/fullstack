/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Ervinas (https://sketchfab.com/paulauskaservinas2018)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/flying-drone-animation-3d24cf2b6c5d4dc78bbaca4fcdce5c0a
Title: Flying Drone animation
*/

import React, { useRef, useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import * as THREE from "three"; // THREE kütüphanesini import ediyoruz

// Model dosyasının DOĞRU ve TEK yolu
// Klasör adını "my_drone" yapmıştık, ona göre düzeltiyorum. Seninki "drone" ise öyle bırak.
const modelPath = "/models/drone/scene-transformed.glb";

// 1. props'tan 'color'ı alıyoruz
export function Model({ color, ...props }) {
  const group = useRef();
  const { scene, animations } = useGLTF(modelPath);
  const { actions } = useAnimations(animations, group);

  // Animasyonları başlatmak için olan useEffect aynı kalıyor
  useEffect(() => {
    const firstAnimationName = Object.keys(actions)[0];
    if (firstAnimationName) {
      actions[firstAnimationName].play();
    }
  }, [actions]);

  // 2. YENİ useEffect'i ekliyoruz. Bu, renk değiştiğinde çalışacak.
  useEffect(() => {
    // scene (model) yüklendiğinde ve color değiştiğinde çalış
    if (scene) {
      // scene.traverse, modelin içindeki her bir objeyi (mesh, light, etc.) gezer.
      scene.traverse((child) => {
        // Eğer gezdiğimiz obje bir Mesh ise (yani geometrisi olan bir parça ise)
        // ve bir materyali varsa...
        if (child.isMesh && child.material) {
          // ...materyalinin rengini yeni renge ayarla.
          child.material.color = new THREE.Color(color);
        }
      });
    }
  }, [scene, color]); // Bu effect, scene veya color değiştiğinde yeniden çalışır.

  return <primitive ref={group} object={scene} {...props} dispose={null} />;
}

useGLTF.preload(modelPath);
